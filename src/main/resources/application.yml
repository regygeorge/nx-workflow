spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9081/realms/miniflow
          # (Spring will fetch JWKS automatically)
  datasource:
    url: jdbc:postgresql://localhost:5432/miniflow
    username: postgres
    password: root123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
      dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect




    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true
      hibernate.type.preferred_json_mapper: jackson

  flyway:
    enabled: true
    locations: classpath:db/migration


  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: hms-appointments-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://localhost:8081
        specific.avro.reader: false
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081
server:
  port: 8085
logging:
  level:
    org.springframework.web: INFO